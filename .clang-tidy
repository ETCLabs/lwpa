---
# For all disabled checks, please provide a rationale here.
#
# - clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling: Due to EtcPal's
#   portability requirements we cannot use any replacements for memcpy(), sprintf(), etc. This risk
#   has been accepted.
# - clang-analyzer-security.insecureAPI.strcpy: Due to EtcPal's portability requirements we cannot
#   use any replacements for strcpy(). This risk has been accepted.
# - cppcoreguidelines-macro-usage: This is primarily a C library and thus makes use of macros;
#   their use cannot be avoided.
# - cppcoreguidelines-avoid-magic-numbers: Too many false positives, especially in unit tests.
# - cppcoreguidelines-pro-type-union-access: False postives in C and tricky C++ code.
# - cppcoreguidelines-pro-bounds-array-to-pointer-decay: EtcPal's portability requirements do not
#   yet allow for the use of span.
# - cppcoreguidelines-pro-bounds-pointer-arithmetic: EtcPal's portability requirements do not yet
#   allow for the use of span.
# - cppcoreguidelines-pro-type-vararg: Our log interface intentionally replicates printf() syntax.
#   This design tradeoff is being made consciously.
# - modernize-deprecated-headers: False positives in C-only headers.
# - modernize-use-trailing-return-type: False positives in C-only headers.
# - modernize-use-using: False positives in C-only headers.
#
Checks: >
  clang-diagnostic-*,
  clang-analyzer-*,
  -clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,
  -clang-analyzer-security.insecureAPI.strcpy,
  cppcoreguidelines-*,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-vararg,
  modernize-*,
  -modernize-deprecated-headers,
  -modernize-use-trailing-return-type,
  -modernize-use-using

WarningsAsErrors: ''
HeaderFilterRegex: '.*etcpal\/([^\/]+\.h|private\/[^\/]+\.h|cpp\/[^\/]+\.h)'
AnalyzeTemporaryDtors: false
FormatStyle:     none
User:            sam
CheckOptions:
  - key:             cert-dcl16-c.NewSuffixes
    value:           'L;LL;LU;LLU'
  - key:             cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
    value:           '0'
  - key:             cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors
    value:           '1'
  - key:             cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value:           '1'
  - key:             google-readability-braces-around-statements.ShortStatementLines
    value:           '1'
  - key:             google-readability-function-size.StatementThreshold
    value:           '800'
  - key:             google-readability-namespace-comments.ShortNamespaceLines
    value:           '10'
  - key:             google-readability-namespace-comments.SpacesBeforeComments
    value:           '2'
  - key:             modernize-loop-convert.MaxCopySize
    value:           '16'
  - key:             modernize-loop-convert.MinConfidence
    value:           reasonable
  - key:             modernize-loop-convert.NamingStyle
    value:           CamelCase
  - key:             modernize-pass-by-value.IncludeStyle
    value:           llvm
  - key:             modernize-replace-auto-ptr.IncludeStyle
    value:           llvm
  - key:             modernize-use-nullptr.NullMacros
    value:           'NULL'
...

